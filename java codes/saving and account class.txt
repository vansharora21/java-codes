class Account {
    protected String depositorName;
    protected int accountNumber;
    protected String accountType;
    protected double balance;

    // Constructor to initialize account
    public Account(String depositorName, int accountNumber, String accountType, double balance) {
        this.depositorName = depositorName;
        this.accountNumber = accountNumber;
        this.accountType = accountType;
        this.balance = balance;
    }

    // Method to deposit money
    public void deposit(double amount) {
        balance += amount;
    }

    // Method to display balance
    public void displayBalance() {
        System.out.println("Balance: " + balance);
    }

    // Method to withdraw money
    public void withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount;
        } else {
            System.out.println("Insufficient balance.");
        }
    }
}

// Class for Savings Account with interest calculation
class SavAcc extends Account {
    private double interestRate;

    public SavAcc(String depositorName, int accountNumber, double balance, double interestRate) {
        super(depositorName, accountNumber, "Savings", balance);
        this.interestRate = interestRate;
    }

    // Method to compound interest
    public void compoundInterest() {
        balance += balance * (interestRate / 100);
    }
}

// Class for Current Account with minimum balance check
class CurrAcc extends Account {
    private double minimumBalance;
    private double serviceCharge;

    public CurrAcc(String depositorName, int accountNumber, double balance, double minimumBalance, double serviceCharge) {
        super(depositorName, accountNumber, "Current", balance);
        this.minimumBalance = minimumBalance;
        this.serviceCharge = serviceCharge;
    }

    @Override
    public void withdraw(double amount) {
        super.withdraw(amount);
        if (balance < minimumBalance) {
            balance -= serviceCharge;
            System.out.println("Service charge imposed due to low balance.");
        }
    }
}
